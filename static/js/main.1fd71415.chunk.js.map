{"version":3,"sources":["Components/RightContent/Projects/projectsData.js","Components/RightContent/Projects/Projects.js","Components/RightContent/Experience/experienceData.js","Components/RightContent/Experience/Experience.js","Components/RightContent/Education/Education.js","Components/RightContent/Navigation/Heading/Heading.js","Components/RightContent/Navigation/Social/Social.js","Components/RightContent/Navigation/Skills/Skills.js","Components/RightContent/Navigation/Navigation.js","Components/RightContent/RightContent.js","App.js","serviceWorker.js","index.js"],"names":["projectList","type","title","preview","tech","code","demo","Projects","projects","map","project","class","src","alt","width","className","tec","target","href","id","experienceList","job","company","period","description","Experience","experience","exp","item","Education","Heading","Social","Skills","Navigation","RightContent","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qWAAaA,G,gBAAc,CACvB,CACAC,KAAM,QACNC,MAAO,0BACPC,QAAS,wBACTC,KAAM,CAAC,QAAS,OAAQ,aACxBC,KAAM,oCACNC,KAAM,iEAEN,CACAL,KAAM,OACNC,MAAO,0BACPC,QAAS,wBACTC,KAAM,CAAC,gBAAgB,QAAS,OAAQ,aACxCC,KAAM,kDACNC,KAAM,+CAEN,CACAL,KAAM,QACNC,MAAO,qBACPC,QAAS,qBACTC,KAAM,CAAC,QAAS,OAAQ,YAAa,aAAc,aACnDC,KAAM,8CACNC,KAAM,sCCYKC,G,MA7BE,WAChB,IAAMC,EAAWR,EAAYS,KAAI,SAAAC,GAC7B,OACI,yBAAKC,MAAQ,WACX,yBAAKC,IAAOF,EAAQP,QAASU,IAAI,UAAUC,MAAQ,SAClD,yBAAKC,UAAU,mBACb,4BAAKL,EAAQR,OACb,uBAAGa,UAAY,QAAf,YAAgCL,EAAQN,KAAKK,KAAI,SAAAO,GAAG,OAChD,0BAAMD,UAAU,OAAOC,OAE3B,yBAAKD,UAAY,SACjB,uBAAGE,OAAS,SAASC,KAAQR,EAAQL,MAArC,aACE,uBAAGY,OAAS,SAASC,KAAQR,EAAQJ,MAArC,sBAMd,OACE,yBAAKK,MAAM,YACT,4BAAI,uBAAGA,MAAM,uBAAb,sBACC,yBAAKI,UAAU,iBACdP,GAED,yBAAKW,GAAG,kBC9BFC,EAAiB,CAC1B,CACIC,IAAI,8BACJC,QAAS,mBACTC,OAAQ,kCACRC,YAAa,CAAE,mGACC,4MAGpB,CACIH,IAAI,wBACJC,QAAS,YACTC,OAAQ,gCACRC,YAAa,CACD,0IACA,uHACA,6CCeLC,G,MAzBI,WACf,IAAMC,EAAaN,EAAeX,KAAI,SAAAkB,GAClC,OACI,yBAAKZ,UAAY,kBACf,yBAAKA,UAAY,cACf,8BAAOY,EAAIN,KACX,mCAASM,EAAIL,SACb,kCAAQK,EAAIJ,SAEd,4BAAKI,EAAIH,YAAYf,KAAI,SAAAmB,GACrB,OACI,4BAAKA,WAMzB,OACE,yBAAKjB,MAAM,cACP,4BAAI,uBAAGA,MAAM,qBAAb,eACCe,KCUMG,G,MA/BG,WAChB,OACE,yBAAKlB,MAAM,aACT,yBAAKQ,GAAG,cACN,4BAAI,uBAAGR,MAAM,0BAAb,cACD,yBAAKI,UAAU,iBACf,yBAAKA,UAAU,YACN,0BAAMA,UAAY,UAAlB,wDACA,0BAAMA,UAAY,UAAlB,gCACA,0BAAMA,UAAY,UAAlB,mCAET,yBAAKA,UAAU,YACN,0BAAMA,UAAY,UAAlB,yCACA,0BAAMA,UAAY,UAAlB,iDACA,0BAAMA,UAAY,UAAlB,6BAEJ,yBAAKA,UAAU,YACX,0BAAMA,UAAY,UAAlB,iEACA,0BAAMA,UAAY,UAAlB,yBACA,0BAAMA,UAAY,UAAlB,6BAEJ,yBAAKA,UAAU,YACX,0BAAMA,UAAY,UAAlB,qDACA,0BAAMA,UAAY,UAAlB,sCACA,0BAAMA,UAAY,UAAlB,wCCbDe,G,YAbC,WACd,OACE,yBAAKnB,MAAM,WACT,yBAAKI,UAAU,gBACf,4CACA,oDACA,2BAAG,uBAAGJ,MAAM,0BAAZ,gCACA,0DCQSoB,G,MAdA,WACb,OACE,yBAAKpB,MAAM,UACP,6CACA,yBAAKA,MAAM,gBACX,uBAAGM,OAAO,SAASC,KAAK,4BAA2B,uBAAGP,MAAM,yBAC5D,uBAAGM,OAAO,SAASC,KAAK,uDAAsD,uBAAGP,MAAM,8BACvF,uBAAGM,OAAO,SAASC,KAAK,mCAAxB,IAA2D,uBAAGP,MAAM,8BCE7DqB,G,MAVD,WACZ,OACE,yBAAKrB,MAAM,UACT,4CACA,uCACA,6CC2BSsB,EA5BI,WACjB,OACE,yBAAKtB,MAAM,cACN,yBAAKI,UAAU,aAAaH,IAAI,2BAA2BC,IAAI,WAAWC,MAAM,UACnF,kBAAC,EAAD,MACA,yBAAKC,UAAU,aACf,kBAAC,EAAD,MACE,yBAAKA,UAAU,WACf,8BAAM,uBAAGJ,MAAM,gBAAf,iCACA,8BAAM,uBAAGA,MAAM,sBAAf,mBACA,8BAAM,uBAAGA,MAAM,oBAAf,2BAEF,kBAAC,EAAD,MACA,6BACE,uBAAGO,KAAK,UAAR,YACA,uBAAGA,KAAK,aAAR,YACA,uBAAGA,KAAK,cAAR,aACA,uBAAGA,KAAK,eAAR,eAEA,yBAAKH,UAAU,YACf,uBAAGJ,MAAM,0BCNFuB,EAbM,WAEnB,OACE,yBAAKvB,MAAM,eAAgBQ,GAAG,SAC3B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCFQgB,MARf,WACE,OACE,yBAAKpB,UAAU,OACX,kBAAC,EAAD,QCIYqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1fd71415.chunk.js","sourcesContent":["export const projectList = [\n    {\n    type: \"front\",\n    title: \"Newsweek Magazine Clone\",\n    preview: \"./images/newsweek.png\",\n    tech: ['HTML5', 'CSS3', 'BOOTSTRAP'],\n    code: \"https://github.com/ngodi/NEWSWEEK\",\n    demo: \"https://raw.githack.com/ngodi/NEWSWEEK/development/index.html\"\n    },\n    {\n    type: \"full\",\n    title: \"Ufriends Social Network\",\n    preview: \"./images/ufriends.png\",\n    tech: ['RUBY ON RAILS','HTML5', 'CSS3', 'BOOTSTRAP'],\n    code: \"https://github.com/diegoarvz4/building_facebook\",\n    demo: \"https://intense-refuge-98385.herokuapp.com/\"\n    },\n    {\n    type: \"front\",\n    title: \"Jquery Drawing app\",\n    preview: \"./images/jdraw.png\",\n    tech: ['HTML5', 'CSS3', 'BOOTSTRAP', 'JAVASCRIPT', 'JQUERY UI'],\n    code: \"https://github.com/ngodi/JQuery_Drawing_App\",\n    demo: \"https://drawing-app.netlify.com/\"\n    }\n];\n\n","/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\n\nimport { projectList } from './projectsData';\nimport './Projects.scss';\n\nconst Projects = () => {\n const projects = projectList.map(project => {\n     return (\n         <div class = \"project\">\n           <img src = {project.preview} alt=\"Preview\" width = \"100%\"/>\n            <div className=\"project-content\">\n              <h3>{project.title}</h3>\n              <p className = \"tech\">Utilized:{project.tech.map(tec => \n                  <span className=\"tec\">{tec}</span>\n              )}</p>\n              <div className = \"links\">\n              <a target = \"_blank\" href = {project.code} >View code</a>\n                <a target = \"_blank\" href = {project.demo} >Live Preview</a>\n              </div>\n            </div>           \n         </div>\n     )\n })\n  return (\n    <div class=\"projects\">\n      <h2><i class=\"fas fa-laptop-code\"></i> Software Projects</h2>\n       <div className=\"projects-list\">\n       {projects}\n       </div>\n       <div id=\"experience\"></div>\n    </div>\n  );\n}\n\nexport default Projects;","export const experienceList = [\n    {\n        job:\" FullStack Developer Intern\",\n        company: \"Nab Technologies\",\n        period: \"From August 2015 - October 2015\",\n        description: [ \"Designed user interfaces in Javascript, CSS, HTML and Jquery, increasing the performance by 25%.\",\n                        \"Built, implemented and maintained many user-friendly applications & back-end services using Ruby on Rails and Jquery, demonstrating service-oriented architecture and focus on the client’s needs.\"\n                  ]\n    },\n    {\n        job:\"Network Administrator\",\n        company: \"Ringo S.A\",\n        period: \"From July 2007 - October 2013\",\n        description: [ \n                    \"Configured, maintained and performed upgrades on corporate customer’s networks and servers; improving throughput and connectivity.\",\n                    \"Monitored network performance (availability, utilization, throughput, goodput, and latency) and test for weaknesses.\",\n                    \"Resolved problems reported by end-user.\"\n                  ]\n    }\n]","/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\n\nimport { experienceList } from './experienceData';\nimport './Experience.scss';\n\nconst Experience = () => {\n    const experience = experienceList.map(exp => {\n        return (\n            <div className = \"experienceItem\">\n              <div className = \"jobheading\">\n                <span>{exp.job}</span>\n                <span>@ {exp.company}</span>\n                <span> {exp.period}</span>\n              </div>\n              <ul>{exp.description.map(item => {\n                  return (\n                      <li>{item}</li>\n                  )\n              })}</ul>\n            </div>\n        )\n    })\n  return (\n    <div class=\"experience\">\n        <h2><i class=\"fas fa-briefcase\"></i> Experience</h2>\n       { experience }\n    </div>\n  );\n}\n\nexport default Experience;","/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\n\nimport './Education.css';\n\nconst Education = () => {\n  return (\n    <div class=\"education\">\n      <div id=\"education\"></div>\n        <h2><i class=\"fas fa-graduation-cap\"></i> Education</h2>\n       <div className=\"academic-list\">\n       <div className=\"academic\">\n                <span className = \"degree\">Bachelor of Science Degree in Computer science Major</span>\n                <span className = \"school\">University of Buea, Cameroon</span>\n                <span className = \"period\"> October 2014 - November 2017 </span>\n            </div>\n       <div className=\"academic\">\n                <span className = \"degree\">FullStack Web Development Certificate</span>\n                <span className = \"school\">Microverse Remote Software Development School</span>\n                <span className = \"period\">May 2019 - January 2020 </span>\n            </div>\n            <div className=\"academic\">\n                <span className = \"degree\">CISCO CERTIFIED NETWORK PROFESSIONAL, CCNA,CCNP(CSCO12205364)</span>\n                <span className = \"school\">CISCO Network Academy</span>\n                <span className = \"period\">June 2010 - August 2012 </span>\n            </div>\n            <div className=\"academic\">\n                <span className = \"degree\">Information Technology and Systems Administration</span>\n                <span className = \"school\">SIS Technologies, Douala, Cameroon</span>\n                <span className = \"period\">From June 2005 - November 2008 </span>\n            </div>\n       </div>\n    </div>\n  );\n}\n\nexport default Education;","import React from 'react';\nimport './Heading.css';\n\nconst Heading = () => {\n  return (\n    <div class=\"heading\">\n      <div className=\"heading-data\">\n      <h1>Ngodi Albert</h1>\n      <span>Frontend Developer</span>\n      <p><i class=\"fas fa-graduation-cap\"></i>Bachelor in Computer Science</p>\n      <p>Former Network Engineer</p>\n      </div>\n   </div>\n  );\n}\n\nexport default Heading;\n","/* eslint-disable react/jsx-no-target-blank */\nimport React from 'react';\nimport './Social.css';\n\nconst Social = () => {\n  return (\n    <div class=\"social\">\n        <h4>Let's connect</h4>\n        <div class=\"social-links\">\n        <a target=\"_blank\" href='https://github.com/ngodi'><i class=\"fab fa-2x fa-github\"></i></a>\n        <a target=\"_blank\" href='https://www.linkedin.com/in/albert-ngodi-b80267174/'><i class=\"fab fa-2x fa-linkedin-in\"></i></a>\n        <a target=\"_blank\" href='https://twitter.com/albertngodi'> <i class=\"fab fa-2x fa-twitter\"></i></a>\n      \n        </div>\n    </div>\n  );\n}\n\nexport default Social;\n","import React from 'react';\nimport './Skills.css';\n\nconst Skills= () => {\n  return (\n    <div class=\"skills\">\n      <span>Javascript</span>\n      <span>React</span>\n      <span>HTML/CSS</span>\n    </div>\n  );\n}\n\nexport default Skills;\n","import React from 'react';\nimport './Navigation.scss';\n\nimport Heading from './Heading/Heading';\nimport Social from './Social/Social';\nimport Skills from './Skills/Skills';\n\nconst Navigation = () => {\n  return (\n    <div class=\"navigation\" >\n         <img className=\"img-circle\" src=\"./images/profile_pic.jpg\" alt=\"portrait\" width=\"300px\"></img>\n      <Heading />\n      <div className=\"right-nav\">\n      <Social />\n        <div className=\"contact\">\n        <span><i class=\"fas fa-home\"></i> Sonara Road, Limbe, Cameroon</span>\n        <span><i class=\"fas fa-mobile-alt\"></i> +237 672378393</span>\n        <span><i class=\"fas fa-envelope\"></i> albertngodi@gmail.com</span>\n      </div>\n      <Skills />\n      <nav>\n        <a href=\"#about\">About Me</a>\n        <a href=\"#projects\">Projects</a>\n        <a href=\"#education\">Education</a>\n        <a href=\"#experience\">Experience</a>\n        </nav>\n        <div className=\"bar-menu\">\n        <i class=\"fas fa-3x fa-bars\"></i>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './RightContent.css';\n\nimport Projects from './Projects/Projects';\nimport Experience from './Experience/Experience';\nimport Education from './Education/Education';\nimport Navigation from './Navigation/Navigation';\n\nconst RightContent = () => {\n\n  return (\n    <div class=\"rightcontent\"  id=\"about\">\n       <Navigation />\n       <Projects />\n       <Experience />\n       <Education />\n      \n    </div>\n  );\n}\n\nexport default RightContent;","import React from 'react';\nimport './App.scss';\n\nimport RightContent from './Components/RightContent/RightContent';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <RightContent />\n     </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}